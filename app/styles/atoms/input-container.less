.input-state-hover {
  border: 1px solid var(--color-gray-300);
  background-color: var(--color-gray-100);
}

.input-state-error-hover {
  .border-color-error;
  background-color: var(--color-gray-100);
}

.input-state-active {
  border: 1px solid var(--color-gray-100);
  box-shadow: 0px 0px 0px 2px #d0d9ff, 0px 1px 3px 0px #0000001a, 0px 1px 2px 0px #0000000f;
}

.input-state-error-active {
  .border-color-error;
  box-shadow: 0px 0px 0px 2px #fee2e2, 0px 1px 3px 0px #0000001a, 0px 1px 2px 0px #0000000f;
}

.reset-box-shadow {
  box-shadow: none;
}

.input-state-focus {
  .input-state-active;
  border: 1px solid var(--color-gray-300);
  background-color: var(--color-white);
}

.input-state-error-focus {
  .input-state-error-active;
  .border-color-error;
  background-color: var(--color-white);
}

.input-state-disabled {
  cursor: not-allowed;
  color: var(--color-gray-400);
  background-color: var(--color-gray-200);
}

.oss-input-container {
  position: relative;

  .yielded-input input,
  .upf-input {
    width: 100%;

    transition: all 250ms ease-in-out;

    border: 1px solid var(--color-border-default);
    color: var(--color-gray-900);
    background-color: var(--color-white);

    &input::placeholder {
      color: var(--color-gray-400);
    }

    &:not(:disabled, .disabled) {
      &:hover {
        .input-state-hover;
      }

      &:active {
        .input-state-active;
      }

      &:focus {
        .input-state-focus;
      }
    }

    &.disabled,
    &:disabled {
      .input-state-disabled;
    }
  }

  &--errored {
    .yielded-input input,
    .upf-input {
      .border;
      .border-color-error;
      .border-radius-default;

      &:not(:disabled, .disabled) {
        &:hover {
          .input-state-error-hover;
        }

        &:active {
          .input-state-error-active;
        }

        &:focus {
          .input-state-error-focus;
        }
      }
    }
  }

  textarea.upf-input {
    max-width: 100%;
    height: var(--height-pc-100);
  }

  .yielded-input input {
    &:extend(.upf-input);
    width: 100%;
  }

  .yielded-input input:focus {
    &:extend(.upf-input:focus);
  }

  .yielded-input input:disabled {
    &:extend(.upf-input:disabled);
  }

  .morpheme {
    position: absolute;
    top: 0px;
    bottom: 0px;
    align-items: center;
    display: flex;
  }

  .suffix {
    .morpheme;
    right: 0;
    i,
    div {
      padding-right: 12px;
      padding-left: 12px;
      height: 100%;
      display: flex;
      align-items: center;
    }
  }

  .prefix {
    .morpheme;
    left: 0;
    padding-right: 12px;
    padding-left: 12px;
  }

  &.has-prefix input {
    padding-left: 32px;
  }

  &.has-suffix input {
    padding-right: 32px;
  }
}
